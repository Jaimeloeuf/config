[user]
	# Change the below as needed
	name = Jaime Loeuf
	email = jaimeloeuf@gmail.com
[core]
	# Visual Studio code set as default git editor
	# Make sure code is the CLI command for vs code and its globally callable
	editor = code --wait

	# Use a global gitignore file in the root user directory
	excludesfile = ~/.gitignore_global
	
	# Converts to CRLF when checking out files
	# Converts to LF when storing the commits
	autocrlf = true
	
	# When Git needs to change line endings to write a file in your working directory,
	# It will change them to the default line ending on your platform.
	# For Windows this will be CRLF, for Unix/Linux/OS X this will be LF.
	eol = native
[color]
	# Colorize output of Git
	ui = true
[alias]
	# Alias to show all the aliases
	alias = config --get-regexp alias

	# Simple shorthand abbrevations.
	s = status
	a = add
	ci = commit
	b = branch
	d = diff
	l = log
	co = checkout


	# Aliases for diff related operations below
	# Diff of staged files
	ds = diff --staged
	# Difference between current branch and master
	dm = diff master
	# Diff to see files that have changed between 2 branches
	# Use with 2 branches, e.g. "git df development...master", shows files that are different from development & master
	df = diff --name-status


	# Aliases for git log operations
	# Display the last commit log from HEAD
	last = log -1 HEAD
	# Git log and show the names of, files that have been changed.
	lf = log --name-only 
	# git log, list single file
	lsf = log --follow --
	# Only show commits both the input branches don't share.
	# E.g. "git log --oneline --decorate --left-right --graph master...development" to show graph of master/development
	graph = log --oneline --decorate --left-right --graph
	 

	# Allow you to add all local changes to the staging area
	all = add .
	# Allows you to unstage a file using 'git unstage file_name'
	unstage = reset HEAD --
	# Abbrev. for deleting a branch
	delete = branch -d
	# Delete last commit but keep changes
	uncommit = reset HEAD^1
	# Below uncommit can take in arbitary num of commits to uncommit
	# uncommit = reset HEAD^
	# Delete changes of an unstaged file.
	# E.g. "git delete_changes file_name"  to delete changes of a file to last commit
	# E.g. "git delete_changes ." to delete changes of all files to last commit
	delchanges = checkout --
    # Stash all files including untracked files
    stash-all = stash --include-untracked
[push]
	# Always push tags together when pushing commits to remote repo.
	followTags = true
	default = current
